course: cs260
name: lab-2
date: 2023-09-20

Note that for the duration of this course all numbers are given as strings.
Unless otherwise stated, use of special libraries is not allowed.
        
##########################################################################################            
# lab-2 2023-09-20

    Task-1:
     Given a two numbers of string data type num1, num2 of the same base. 
     Iterate over the given numbers and perform digit-by-digit addition starting from 
     the least significant digit. Make sure to take into account possible carry values.
    
    examples:
    "99" + "1" in base 10 --> "100"

    "1010" + "0010" in base 2 --> "1100"
    
    "9" + "1" in base 16 --> "a"
    
    Task-2:
    Finally, print the message to the screen with the following:
        original values of the num1, num2 as well as the result of the addition.
        Example: 
            The sum of <num1> + <num2> is <result_value>


##########################################################################################

Notes:
* do not use casting, make use of lookup_tables ( as seen in lab-1 )

* process pair of digits starting from least significant side.
  you can make numbers same length, pad numbers with zeros on left side
    e.g. you are allowed to use string zfill method in python or write your own

* process each subsequent pairs of digits to the left, make sure to account for carry

* when performing digit-by-digit addition it is easier to immediately add carry from previous calculation
    sum_of_digits =  digit1 + digit2 + carry

* if sum_of_digits >= base, we know that carry should be set to 1, otherwise set it to 0

* result_digit can simply be calculated as sum_of_digits % base
    
* make sure overflow works as needed:
   For example: "1111" + "0001" in base 2 -->  "10000"
 


